/**
二维数组就是在一维数组上，多加一个维度。
二维数组定义的四种方式：

1. ` 数据类型  数组名[ 行数 ][ 列数 ]; `
2. `数据类型  数组名[ 行数 ][ 列数 ] = { {数据1，数据2 } ，{数据3，数据4 } };`
3. `数据类型  数组名[ 行数 ][ 列数 ] = { 数据1，数据2，数据3，数据4};`
4. 数据类型  数组名[  ][ 列数 ] = { 数据1，数据2，数据3，数据4};`
建议使用第二种

二维数组在取元素地址时要加&,在剩下取行或列直接arr[行]/arr[列]就是直接取地址

**/
#include "iostream"
using namespace std;

int main(void)
{
    int arr[2][3]={ {1,2,3}, {4,5,6} };

    cout << arr[1][2]<<endl;  //从0开始



    cout<< "二维数组所占大小:      "<<sizeof(arr)<<endl;
    cout<< "二维数组一行所占大小:  "<<sizeof(arr[0])<<endl;

    cout<<"\r\n\r\n"<<endl;

    cout<< "二维数组地址为:  "<<arr<<endl;         //arr arr[0]就不是个数，所以直接输出就是地址
    cout<< "第一行地址为:    "<<arr[0]<<endl;      // arr[][]是个数，因此输出地址就得加&
    cout<< "第一个元素地址为:"<<&arr[0][0]<<endl;

    cout<<"\r\n\r\n"<<endl;

    cout<< "第一行地址为:    "<<arr[0]<<endl;
    cout<< "第二行地址为:    "<<arr[1]<<endl;
    cout<< "大端模式，地址递增。第二行地址-第一行地址可以算数组有几列"<<endl;








    cout << "\r\n\r\n\r\n请输入任意字符结束程序"<< "\n\n"<<endl;
    cin.get();
    return 0;
}
